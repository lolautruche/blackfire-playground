# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
    build:
        docker:
            # Specify the version you desire here
            - image: circleci/php:7.3-node
            - image: blackfire/blackfire
              environment:
                  BLACKFIRE_CLIENT_ID: 6933550d-7827-43b4-b260-088a52758d08
                  BLACKFIRE_CLIENT_TOKEN: 6ae1433327e1d91a5078400a42e421dc687998fda95d314227dd289279155749
                  BLACKFIRE_SERVER_ID: ba8bc7ac-987a-4918-b6f6-0f5a38fcc885
                  BLACKFIRE_SERVER_TOKEN: f37fe4c36160f1148c48c3a74f66a43051618864f3c150a9c1f5f69b8beb7f3c

            # Specify service dependencies here if necessary
            # CircleCI maintains a library of pre-built images
            # documented at https://circleci.com/docs/2.0/circleci-images/
            # Using the RAM variation mitigates I/O contention
            # for database intensive operations.
            # - image: circleci/mysql:5.7-ram
            #
            # - image: redis:2.8.19

        steps:
            - checkout

            - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
            - run: sudo docker-php-ext-install zip
            - run:
                name: Install Blackfire probe
                command: |
                    version=$(php -r "echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;")
                    curl -A "Docker" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version
                    mkdir -p /tmp/blackfire
                    tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp/blackfire
                    sudo mv /tmp/blackfire/blackfire-*.so $(php -r "echo ini_get('extension_dir');")/blackfire.so
                    echo "extension=blackfire.so" | sudo tee -a $PHP_INI_DIR/conf.d/blackfire.ini
                    echo "blackfire.agent_socket=tcp://blackfire:8707" | sudo tee -a $PHP_INI_DIR/conf.d/blackfire.ini
                    rm -rf /tmp/blackfire /tmp/blackfire-probe.tar.gz
                    php -v

            # Download and cache dependencies
            - restore_cache:
                  keys:
                      # "composer.lock" can be used if it is committed to the repo
                      - v1-dependencies-{{ checksum "composer.lock" }}
                      # fallback to using the latest cache if no exact match is found
                      - v1-dependencies-

            - run: composer install -n --prefer-dist

            - save_cache:
                  key: v1-dependencies-{{ checksum "composer.lock" }}
                  paths:
                      - ./vendor
            - restore_cache:
                  keys:
                      - node-v1-{{ checksum "package.json" }}
                      - node-v1-
            - run: yarn install
            - save_cache:
                  key: node-v1-{{ checksum "package.json" }}
                  paths:
                      - node_modules

            - run:
                name: Blackfire tests
                environment:
                    APP_DEBUG=0
                command: php bin/php phpunit --group=blackfire
